# Automatically generated by: ros2nix --output-dir=ros_ws/nix-packages --output-as-nix-pkg-name --no-default --distro jazzy
{
  nix-ros-overlay ? builtins.fetchTarball "https://github.com/lopsided98/nix-ros-overlay/archive/master.tar.gz",
  pkgs ? import nix-ros-overlay { },
  rosDistro ? "jazzy",
  extraPkgs ? { },
  extraPaths ? [ ],
  withPackages ? _: [ ],
  extraShellHook ? "",
}:
pkgs.mkShell {
  name = "ros2nix ${rosDistro} shell";
  packages = [
    (pkgs.rosPackages.${rosDistro}.buildEnv {
      wrapPrograms = false;
      paths =
        [
          pkgs.colcon
          pkgs.rosPackages.${rosDistro}.ros-core

          # Work around https://github.com/lopsided98/nix-ros-overlay/pull/624
          pkgs.rosPackages.${rosDistro}.ament-cmake-core
          pkgs.rosPackages.${rosDistro}.python-cmake-module
        ]
        ++ (
          with pkgs;
          with pkgs.rosPackages.${rosDistro};
          with extraPkgs;
          [
            # Dependencies from package.xml files
            actuator-msgs
            ament-cmake
            ament-copyright
            ament-flake8
            ament-lint-auto
            ament-lint-common
            ament-pep257
            backward-ros
            boost
            controller-manager
            diff-drive-controller
            geometry-msgs
            gz-ros2-control
            hardware-interface
            hi-can
            hi-can-raw
            joint-state-broadcaster
            joint-state-publisher
            joint-state-publisher-gui
            joy
            mecanum-drive-controller
            navigation2
            nlohmann_json
            openssl
            pluginlib
            python3Packages.pygame
            python3Packages.pytest
            rclcpp
            rclcpp-lifecycle
            rclpy
            realsense2-camera
            realsense2-description
            robot-localization
            robot-state-publisher
            ros-gz-bridge
            ros-gz-image
            ros-gz-interfaces
            ros-gz-sim
            ros2controlcli
            ros2launch
            rplidar-ros
            rviz2
            sensor-msgs
            simple-networking
            slam-toolbox
            teleop-twist-joy
            teleop-twist-keyboard
            tf2
            tf2-geometry-msgs
            twist-mux
            urdf
            xacro
          ]
        )
        ++ builtins.attrValues extraPkgs
        ++ extraPaths
        ++ withPackages (pkgs // pkgs.rosPackages.${rosDistro});
    })
  ];
  shellHook =
    ''
      # Setup ROS 2 shell completion. Doing it in direnv is useless.
      if [[ ! $DIRENV_IN_ENVRC ]]; then
          eval "$(${pkgs.python3Packages.argcomplete}/bin/register-python-argcomplete ros2)"
          eval "$(${pkgs.python3Packages.argcomplete}/bin/register-python-argcomplete colcon)"
      fi
    ''
    + extraShellHook;
}
