amcl:
  ros__parameters:
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 12.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000 # Increased from 1000 for better localization
    min_particles: 500 # Increased from 250 for better localization
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.1 # Enable recovery (was 0.0)
    recovery_alpha_slow: 0.001 # Enable recovery (was 0.0)
    resample_interval: 2
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0 # Increased from 0.5 for timing tolerance
    update_min_a: 0.3 # Scaled for larger robot
    update_min_d: 0.5 # Scaled for larger robot
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan
    map_topic: map
    set_initial_pose: true # Changed to true for automatic initialization
    always_reset_initial_pose: false
    first_map_only: false
    initial_pose:
      x: 0.0
      y: 0.0
      z: 0.0
      yaw: 0.0
bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 1.0 # Increased from 0.5 for timing tolerance
    filter_duration: 0.3
    default_nav_to_pose_bt_xml: "$(find-pkg-share nav2_bt_navigator)/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml"
    default_nav_through_poses_bt_xml: "$(find-pkg-share nav2_bt_navigator)/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml"
    always_reload_bt_xml: false
    goal_blackboard_id: goal
    goals_blackboard_id: goals
    path_blackboard_id: path
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
    error_code_name_prefixes:
      - assisted_teleop
      - backup
      - compute_path
      - dock_robot
      - drive_on_heading
      - follow_path
      - nav_thru_poses
      - nav_to_pose
      - spin
      - route
      - undock_robot
      - wait
    enable_groot_monitoring: true
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
controller_server:
  ros__parameters:
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.5 # Increased from 0.3 for more tolerance
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.05 # Reduced from 0.1 for less strict movement requirement
      movement_time_allowance: 15.0 # Increased from 10.0 for more time
    goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.1 # Slightly increased from 0.08
      yaw_goal_tolerance: 0.2 # Increased from 0.15
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: true
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.2 # Reduced from 0.25 for more conservative movement
      max_vel_y: 0.0
      max_vel_theta: 0.8 # Reduced from 1.0 for smoother rotation
      min_speed_xy: 0.0
      max_speed_xy: 0.2 # Reduced from 0.25
      min_speed_theta: 0.0
      acc_lim_x: 2.0 # Reduced from 3.0 for smoother acceleration
      acc_lim_y: 0.0
      acc_lim_theta: 2.5 # Reduced from 3.2 for smoother rotation
      decel_lim_x: -2.0 # Less aggressive deceleration
      decel_lim_y: 0.0
      decel_lim_theta: -2.5 # Less aggressive deceleration
      vx_samples: 20 # Increased from 15 for better trajectory options
      vy_samples: 0
      vtheta_samples: 40 # Increased from 30 for better rotation options
      sim_time: 1.5 # Increased from 1.0 for better lookahead
      linear_granularity: 0.05 # Increased from 0.03 for computational efficiency
      angular_granularity: 0.025
      transform_tolerance: 1.0 # Increased from 0.5 for timing tolerance
      xy_goal_tolerance: 0.1 # Increased from 0.08
      trans_stopped_velocity: 0.2 # Reduced from 0.25
      short_circuit_trajectory_evaluation: true # Changed to true for efficiency
      stateful: true
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "PathAlign", "PathDist", "GoalAlign", "GoalDist"]
      BaseObstacle.scale: 0.05 # Increased from 0.02 for better obstacle avoidance
      PathAlign.scale: 32.0 # Reduced from 160.0 for less aggressive path following
      PathAlign.forward_point_distance: 0.325
      GoalAlign.scale: 24.0 # Increased from 12.0 for better goal alignment
      GoalAlign.forward_point_distance: 0.325
      PathDist.scale: 32.0
      GoalDist.scale: 24.0 # Reduced from 32.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0
    enable_stamped_cmd_vel: true
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0 # Increased from 3.0 for better responsiveness
      publish_frequency: 2.0 # Increased from 1.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      robot_radius: 0.12
      plugins: ["obstacle_layer", "inflation_layer"] # Removed voxel_layer to reduce computation
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.55 # Increased from 0.5 for better clearance
        cost_scaling_factor: 3.0 # Reduced from 5.0 for less aggressive inflation
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.0
      static_layer:
        map_subscribe_transient_local: true
      always_send_full_costmap: true
global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0 # Increased from 0.5 for better map updates
      publish_frequency: 1.0 # Increased from 0.5
      global_frame: map
      robot_base_frame: base_link
      transform_tolerance: 1.0 # Increased from 0.5 for timing tolerance
      robot_radius: 0.12
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        transform_tolerance: 0.1
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.35 # Increased from 0.3 for better clearance
        cost_scaling_factor: 3.0 # Reduced from 5.0 for less aggressive inflation
      always_send_full_costmap: true
map_server:
  ros__parameters:
    yaml_filename: "map.yaml"
map_saver:
  ros__parameters:
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True
planner_server:
  ros__parameters:
    expected_planner_frequency: 10.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.25 # Increased from 0.2 for more flexible planning
      use_astar: true
      allow_unknown: true
smoother_server:
  ros__parameters:
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True
behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_costmap_topic: global_costmap/costmap_raw
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait", "assisted_teleop"]
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"
    wait:
      plugin: "nav2_behaviors::Wait"
    assisted_teleop:
      plugin: "nav2_behaviors::AssistedTeleop"
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_timeout: 0.2 # Increased from 0.1 for timing tolerance
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.8 # Reduced from 1.0 for smoother rotation
    min_rotational_vel: 0.2 # Reduced from 0.4
    rotational_acc_lim: 2.5 # Reduced from 3.2 for smoother acceleration
    enable_stamped_cmd_vel: true
waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200
velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0 # Increased from 10.0 for smoother operation
    scale_velocities: false
    feedback: "OPEN_LOOP"
    max_velocity: [0.25, 0.0, 1.0] # Reduced max velocities for stability
    min_velocity: [-0.25, 0.0, -1.0]
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
    max_accel: [1.5, 0.0, 2.0] # Reduced for smoother acceleration
    max_decel: [-1.5, 0.0, -2.0] # Reduced for smoother deceleration
    odom_topic: "odom"
    odom_duration: 0.1
    use_realtime_priority: false
    enable_stamped_cmd_vel: true
collision_monitor:
  ros__parameters:
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    state_topic: "collision_monitor_state"
    transform_tolerance: 1.0 # Increased from 0.5 for timing tolerance
    source_timeout: 5.0 # Increased from 2.0 for more robust operation
    base_shift_correction: true
    stop_pub_timeout: 2.0
    enable_stamped_cmd_vel: true
    use_realtime_priority: false
    polygons: ["PolygonStop", "PolygonSlow", "FootprintApproach"]
    PolygonStop:
      type: "circle"
      radius: 0.15 # Increased from 0.1 for better safety margin
      action_type: "stop"
      min_points: 4
      visualize: true
      polygon_pub_topic: "polygon_stop"
      enabled: true
    PolygonSlow:
      type: "polygon"
      points: "[[0.15, 0.15], [0.15, -0.15], [-0.15, -0.15], [-0.15, 0.15]]"
      action_type: "slowdown"
      min_points: 4
      slowdown_ratio: 0.5 # Increased from 0.3 for less aggressive slowdown
      visualize: true
      polygon_pub_topic: "polygon_slowdown"
      enabled: true
    FootprintApproach:
      type: "polygon"
      action_type: "approach"
      footprint_topic: "/local_costmap/published_footprint"
      time_before_collision: 2.0
      simulation_time_step: 0.02
      min_points: 6
      visualize: False
      enabled: true
    observation_sources: ["scan"]
    scan:
      source_timeout: 0.5 # Increased from 0.1 to reduce timeout issues
      type: "scan"
      topic: "/scan"
      enabled: true
docking_server:
  ros__parameters:
    dock_plugins: ["nova_carter_dock"]
    nova_carter_dock:
      plugin: "opennav_docking::SimpleChargingDock"
    docks: ["home_dock", "flex_dock1", "flex_dock2"]
    home_dock:
      type: "nova_carter_dock"
      frame: map
      pose: [0.0, 0.0, 0.0]
    flex_dock1:
      type: "nova_carter_dock"
      frame: map
      pose: [10.0, 10.0, 0.0]
    flex_dock2:
      type: "nova_carter_dock"
      frame: map
      pose: [30.0, 30.0, 0.0]
    enable_stamped_cmd_vel: true
    controller:
      k_phi: 3.0
      k_delta: 2.0
      v_linear_min: 0.15
      v_linear_max: 0.15
      use_collision_detection: true
      costmap_topic: "/local_costmap/costmap_raw"
      footprint_topic: "/local_costmap/published_footprint"
      transform_tolerance: 0.1
      projection_time: 5.0
      simulation_step: 0.1
      dock_collision_threshold: 0.3
loopback_simulator:
  ros__parameters:
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    map_frame_id: "map"
    scan_frame_id: "base_scan" # tb4_loopback_simulator.launch.py remaps to 'rplidar_link'
    update_duration: 0.02
